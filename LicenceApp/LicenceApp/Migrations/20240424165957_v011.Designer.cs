// <auto-generated />
using System;
using LicenceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicenceApp.Migrations
{
    [DbContext(typeof(LicenceDBContext))]
    [Migration("20240424165957_v011")]
    partial class v011
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LicenceApp.models.GlobalDao.ApplicationDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("APP_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("APP_DESCRIPTION");

                    b.Property<int?>("Identifiant")
                        .HasColumnType("int")
                        .HasColumnName("APP_IDENTIFIANT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("APP_NOM");

                    b.HasKey("Id");

                    b.ToTable("APPLICATION");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.AttributeLicenceDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ATT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("APP_ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATT_DESCRIPTION");

                    b.Property<int?>("EnumurationValue")
                        .HasColumnType("int")
                        .HasColumnName("ATT_ENUMERATION_VALUE");

                    b.Property<string>("Intutile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ATT_INTUTILE");

                    b.Property<bool>("Obligations")
                        .HasColumnType("bit")
                        .HasColumnName("ATT_OBLIGATION");

                    b.Property<short>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("ATT_TYPE");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ATTRIBUTE_LICENCE");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.AttributeLicenceValeurDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ATTV_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeId")
                        .HasColumnType("int")
                        .HasColumnName("ATT_ID");

                    b.Property<int>("LicenceId")
                        .HasColumnType("int")
                        .HasColumnName("LIC_ID");

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ATTV_VALEUR");

                    b.HasKey("Id");

                    b.HasIndex("LicenceId");

                    b.ToTable("ATTRIBUTE_LICENCE_VALUE");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.ClientDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CL_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_ADRESSE");

                    b.Property<string>("CodePostal")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_CODE_POSTAL");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_EMAIL");

                    b.Property<int?>("Identifiant")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("CL_IDENTIFIANT");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_PAYS");

                    b.Property<string>("RaisonSocial")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_RAISON_SOCIAL");

                    b.Property<int>("Telephone")
                        .HasMaxLength(8)
                        .HasColumnType("int")
                        .HasColumnName("CL_TELEPHONE");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_VILLE");

                    b.HasKey("Id");

                    b.ToTable("CLIENTS");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.EnumerationDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EN_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EN_CODE");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EN_NOM");

                    b.HasKey("Id");

                    b.ToTable("ENUMERATION");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.EnumerationValeurDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EV_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnumerationId")
                        .HasColumnType("int")
                        .HasColumnName("EN_ID");

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EV_VALEUR");

                    b.HasKey("Id");

                    b.HasIndex("EnumerationId");

                    b.ToTable("ENUMERATION_VALUE");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.LicenceDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LIC_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("APP_ID");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("CL_ID");

                    b.Property<DateTime?>("DateExp")
                        .HasColumnType("Date")
                        .HasColumnName("LIC_DATE_EXP");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("LIC_USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ClientId");

                    b.ToTable("LICENCE");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.UserDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("U_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_FIRSTNAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_LASTNAME");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("U_PASSWORD_HASH");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("U_PASSWORD_SALT");

                    b.Property<short>("Role")
                        .HasColumnType("smallint")
                        .HasColumnName("U_ROLE");

                    b.HasKey("Id");

                    b.ToTable("USERS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "sabrijm123@gmail.com",
                            FirstName = "sabri",
                            LastName = "jammoussi",
                            PasswordHash = new byte[] { 149, 250, 200, 227, 102, 193, 170, 83, 199, 148, 216, 17, 193, 146, 134, 63, 79, 86, 160, 119, 70, 72, 71, 154, 129, 0, 41, 5, 18, 209, 93, 186, 152, 77, 33, 216, 194, 143, 106, 140, 152, 28, 155, 3, 251, 141, 60, 61, 175, 211, 6, 196, 91, 109, 128, 148, 66, 213, 212, 79, 45, 209, 99, 212 },
                            PasswordSalt = new byte[] { 164, 228, 125, 9, 152, 5, 106, 255, 121, 79, 185, 14, 182, 221, 87, 147, 98, 29, 224, 254, 7, 216, 207, 46, 10, 159, 31, 194, 143, 204, 58, 45, 55, 208, 102, 154, 190, 240, 251, 183, 230, 198, 51, 128, 255, 104, 91, 203, 118, 109, 19, 239, 38, 235, 120, 134, 109, 228, 72, 87, 62, 51, 173, 0, 144, 84, 195, 120, 63, 41, 214, 168, 76, 12, 164, 144, 84, 134, 40, 250, 84, 54, 77, 112, 187, 38, 6, 116, 181, 136, 233, 18, 222, 32, 170, 162, 140, 74, 106, 178, 158, 166, 130, 198, 68, 55, 159, 92, 32, 234, 31, 208, 30, 102, 80, 26, 225, 12, 50, 38, 214, 221, 35, 77, 88, 66, 6, 179 },
                            Role = (short)0
                        });
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.AttributeLicenceDao", b =>
                {
                    b.HasOne("LicenceApp.models.GlobalDao.ApplicationDao", "Application")
                        .WithMany("Attributes")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.AttributeLicenceValeurDao", b =>
                {
                    b.HasOne("LicenceApp.models.GlobalDao.LicenceDao", "LicenceDao")
                        .WithMany("AttributeValeurs")
                        .HasForeignKey("LicenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LicenceDao");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.EnumerationValeurDao", b =>
                {
                    b.HasOne("LicenceApp.models.GlobalDao.EnumerationDao", "Enumeration")
                        .WithMany("Valeurs")
                        .HasForeignKey("EnumerationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enumeration");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.LicenceDao", b =>
                {
                    b.HasOne("LicenceApp.models.GlobalDao.ApplicationDao", "Application")
                        .WithMany("Licences")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicenceApp.models.GlobalDao.ClientDao", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.ApplicationDao", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Licences");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.EnumerationDao", b =>
                {
                    b.Navigation("Valeurs");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.LicenceDao", b =>
                {
                    b.Navigation("AttributeValeurs");
                });
#pragma warning restore 612, 618
        }
    }
}
