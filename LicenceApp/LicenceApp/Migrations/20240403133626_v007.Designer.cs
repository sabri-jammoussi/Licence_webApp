// <auto-generated />
using System;
using LicenceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicenceApp.Migrations
{
    [DbContext(typeof(LicenceDBContext))]
    [Migration("20240403133626_v007")]
    partial class v007
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LicenceApp.models.GlobalDao.ApplicationDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("APP_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("APP_DESCRIPTION");

                    b.Property<int?>("Identifiant")
                        .HasColumnType("int")
                        .HasColumnName("APP_IDENTIFIANT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("APP_NOM");

                    b.HasKey("Id");

                    b.ToTable("APPLICATION");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.AttributeLicenceDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ATT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("APP_ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ATT_DESCRIPTION");

                    b.Property<string>("Intutile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ATT_INTUTILE");

                    b.Property<short>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("ATT_TYPE");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ATTRIBUTE_LICENCE");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.ClientDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CL_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_ADRESSE");

                    b.Property<string>("CodePostal")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_CODE_POSTAL");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_EMAIL");

                    b.Property<int?>("Identifiant")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("CL_IDENTIFIANT");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_PAYS");

                    b.Property<string>("RaisonSocial")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_RAISON_SOCIAL");

                    b.Property<int>("Telephone")
                        .HasMaxLength(8)
                        .HasColumnType("int")
                        .HasColumnName("CL_TELEPHONE");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_VILLE");

                    b.HasKey("Id");

                    b.ToTable("CLIENTS");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.EnumerationDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EN_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EN_CODE");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EN_NOM");

                    b.HasKey("Id");

                    b.ToTable("ENUMERATION");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.EnumerationValeurDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EV_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnumerationId")
                        .HasColumnType("int")
                        .HasColumnName("EN_ID");

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EV_VALEUR");

                    b.HasKey("Id");

                    b.HasIndex("EnumerationId");

                    b.ToTable("ENUMERATION_VALUE");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.UserDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("U_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_FIRSTNAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_LASTNAME");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("U_PASSWORD_HASH");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("U_PASSWORD_SALT");

                    b.Property<short>("Role")
                        .HasColumnType("smallint")
                        .HasColumnName("U_ROLE");

                    b.HasKey("Id");

                    b.ToTable("USERS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "sabrijm123@gmail.com",
                            FirstName = "sabri",
                            LastName = "jammoussi",
                            PasswordHash = new byte[] { 189, 243, 83, 27, 190, 221, 190, 156, 252, 160, 165, 151, 219, 135, 49, 9, 92, 24, 204, 101, 222, 134, 128, 147, 170, 149, 41, 158, 186, 1, 51, 146, 143, 185, 227, 81, 168, 199, 65, 132, 114, 142, 159, 38, 128, 226, 24, 44, 49, 9, 81, 8, 139, 202, 25, 160, 34, 198, 207, 146, 125, 129, 196, 10 },
                            PasswordSalt = new byte[] { 6, 21, 55, 130, 52, 176, 65, 30, 133, 147, 224, 44, 75, 69, 255, 94, 182, 92, 227, 169, 185, 94, 6, 147, 34, 189, 202, 71, 173, 48, 0, 28, 198, 184, 40, 147, 39, 99, 254, 91, 235, 79, 228, 159, 235, 36, 206, 103, 241, 8, 105, 167, 179, 40, 27, 15, 181, 144, 196, 15, 127, 141, 98, 90, 70, 215, 139, 123, 234, 193, 150, 154, 128, 124, 35, 62, 233, 240, 207, 159, 193, 161, 173, 187, 206, 65, 66, 213, 143, 238, 98, 116, 18, 228, 250, 68, 35, 230, 140, 204, 44, 45, 189, 205, 103, 210, 224, 152, 25, 214, 1, 178, 90, 94, 47, 121, 121, 249, 123, 228, 124, 78, 39, 177, 8, 29, 31, 204 },
                            Role = (short)0
                        });
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.AttributeLicenceDao", b =>
                {
                    b.HasOne("LicenceApp.models.GlobalDao.ApplicationDao", "Application")
                        .WithMany("Attributes")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.EnumerationValeurDao", b =>
                {
                    b.HasOne("LicenceApp.models.GlobalDao.EnumerationDao", "Enumeration")
                        .WithMany("Valeurs")
                        .HasForeignKey("EnumerationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enumeration");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.ApplicationDao", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("LicenceApp.models.GlobalDao.EnumerationDao", b =>
                {
                    b.Navigation("Valeurs");
                });
#pragma warning restore 612, 618
        }
    }
}
