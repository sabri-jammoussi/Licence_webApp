// <auto-generated />
using System;
using LicenceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicenceApp.Migrations
{
    [DbContext(typeof(LicenceDBContext))]
    [Migration("20240314141403_v004")]
    partial class v004
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LicenceApp.models.UserDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("U_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_FIRSTNAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_LASTNAME");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("U_PASSWORD_HASH");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("U_PASSWORD_SALT");

                    b.Property<short>("Role")
                        .HasColumnType("smallint")
                        .HasColumnName("U_ROLE");

                    b.HasKey("Id");

                    b.ToTable("USERS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "sabrijm123@gmail.com",
                            FirstName = "sabri",
                            LastName = "jammoussi",
                            PasswordHash = new byte[] { 161, 87, 39, 218, 209, 191, 155, 207, 83, 103, 48, 180, 38, 157, 47, 82, 118, 7, 208, 156, 230, 32, 29, 147, 16, 206, 227, 168, 112, 49, 248, 122, 177, 11, 10, 101, 156, 29, 192, 149, 227, 41, 175, 111, 228, 44, 16, 206, 109, 158, 96, 143, 177, 142, 26, 166, 179, 134, 222, 25, 118, 66, 23, 12 },
                            PasswordSalt = new byte[] { 58, 4, 137, 172, 225, 34, 25, 202, 244, 75, 56, 11, 92, 64, 221, 83, 204, 13, 241, 168, 57, 130, 185, 85, 236, 236, 224, 69, 30, 163, 129, 52, 178, 238, 97, 119, 23, 122, 139, 175, 116, 229, 42, 177, 187, 36, 10, 123, 7, 159, 72, 92, 216, 225, 158, 137, 241, 222, 245, 186, 74, 65, 136, 93, 157, 215, 213, 148, 57, 199, 253, 128, 190, 153, 184, 43, 5, 190, 253, 245, 229, 124, 121, 99, 106, 64, 206, 141, 24, 49, 184, 111, 94, 133, 12, 156, 201, 25, 201, 94, 170, 180, 210, 235, 53, 60, 30, 79, 37, 236, 127, 135, 6, 221, 30, 157, 219, 19, 213, 229, 3, 15, 93, 120, 247, 253, 205, 81 },
                            Role = (short)0
                        });
                });

            modelBuilder.Entity("LicenceApp.models.clients.ClientDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("U_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_ADRESSE");

                    b.Property<string>("CodePostal")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_CODE_POSTAL");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_EMAIL");

                    b.Property<int?>("Identifiant")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("U_IDENTIFIANT");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_PAYS");

                    b.Property<string>("RaisonSocial")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_RAISON_SOCIAL");

                    b.Property<int>("Telephone")
                        .HasMaxLength(8)
                        .HasColumnType("int")
                        .HasColumnName("U_TELEPHONE");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_VILLE");

                    b.HasKey("Id");

                    b.ToTable("CLIENTS");
                });
#pragma warning restore 612, 618
        }
    }
}
