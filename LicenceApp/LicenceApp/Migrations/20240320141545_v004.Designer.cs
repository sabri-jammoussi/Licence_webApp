// <auto-generated />
using System;
using LicenceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicenceApp.Migrations
{
    [DbContext(typeof(LicenceDBContext))]
    [Migration("20240320141545_v004")]
    partial class v004
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LicenceApp.models.Applications.ApplicationDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("APP_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("APP_DESCRIPTION");

                    b.Property<int?>("Identifiant")
                        .HasColumnType("int")
                        .HasColumnName("APP_IDENTIFIANT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("APP_NOM");

                    b.HasKey("Id");

                    b.ToTable("APPLICATION");
                });

            modelBuilder.Entity("LicenceApp.models.UserDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("U_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_FIRSTNAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("U_LASTNAME");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("U_PASSWORD_HASH");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("U_PASSWORD_SALT");

                    b.Property<short>("Role")
                        .HasColumnType("smallint")
                        .HasColumnName("U_ROLE");

                    b.HasKey("Id");

                    b.ToTable("USERS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "sabrijm123@gmail.com",
                            FirstName = "sabri",
                            LastName = "jammoussi",
                            PasswordHash = new byte[] { 169, 126, 205, 168, 81, 245, 175, 26, 105, 232, 199, 94, 172, 238, 160, 206, 7, 231, 250, 123, 252, 186, 88, 149, 237, 86, 32, 80, 217, 69, 53, 101, 216, 202, 22, 84, 223, 182, 206, 36, 192, 30, 111, 49, 225, 231, 59, 24, 145, 222, 210, 97, 143, 207, 212, 77, 233, 194, 244, 186, 102, 53, 141, 110 },
                            PasswordSalt = new byte[] { 172, 87, 175, 138, 252, 105, 103, 82, 74, 114, 124, 90, 58, 229, 45, 68, 244, 255, 174, 146, 171, 178, 153, 20, 99, 17, 178, 119, 132, 55, 125, 135, 88, 37, 120, 147, 168, 64, 81, 150, 147, 94, 30, 95, 161, 91, 90, 249, 108, 2, 97, 20, 115, 12, 251, 206, 93, 28, 122, 156, 8, 251, 142, 225, 159, 84, 178, 217, 169, 139, 12, 54, 132, 176, 165, 184, 246, 101, 110, 240, 158, 45, 78, 162, 224, 37, 231, 33, 138, 83, 166, 207, 225, 110, 153, 115, 29, 113, 225, 206, 152, 155, 237, 193, 245, 13, 145, 156, 218, 98, 29, 148, 36, 195, 226, 180, 207, 45, 241, 248, 165, 240, 47, 162, 222, 19, 141, 196 },
                            Role = (short)0
                        });
                });

            modelBuilder.Entity("LicenceApp.models.clients.ClientDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CL_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_ADRESSE");

                    b.Property<string>("CodePostal")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_CODE_POSTAL");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_EMAIL");

                    b.Property<int?>("Identifiant")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("CL_IDENTIFIANT");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_PAYS");

                    b.Property<string>("RaisonSocial")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_RAISON_SOCIAL");

                    b.Property<int>("Telephone")
                        .HasMaxLength(8)
                        .HasColumnType("int")
                        .HasColumnName("CL_TELEPHONE");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CL_VILLE");

                    b.HasKey("Id");

                    b.ToTable("CLIENTS");
                });
#pragma warning restore 612, 618
        }
    }
}
